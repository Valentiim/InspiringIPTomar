@model InspiringIPTomar.Models.Alunos

@{
    ViewBag.Title = "Novo Aluno";
}

<h2>Inscrição de novo Aluno</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Aluno</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Concelho, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Concelho, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Concelho, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telemovel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telemovel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telemovel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Sexo", new List<SelectListItem>
                {
                    new SelectListItem {Text="Masculino", Value="1", Selected=true},
                    new SelectListItem {Text="Feminino", Value="2"},
                })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Data_Nascimento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Data_Nascimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Data_Nascimento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group"> 
            @Html.LabelFor(model => model.HabAcademicas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Habilitações Académicas", new List<SelectListItem>
                {
                    new SelectListItem {Text="12º ano", Value="1", Selected=true},
                    new SelectListItem {Text="Licenciatura", Value="2"},
                    new SelectListItem {Text="Mestrado", Value="3"},
                    new SelectListItem {Text="Doutoramento", Value="4"},
                    new SelectListItem {Text="Grau académico superior estrangeiro", Value="5"},

                })
           
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InforSobre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Habilitações Académicas", new List<SelectListItem>
                {
                    new SelectListItem {Text="Licenciaturas", Value="1", Selected=true},
                    new SelectListItem {Text="Cursos Técnicos Profissionais (nível V)", Value="2"},
                    new SelectListItem {Text="Pós-Graduações", Value="3"},
                    new SelectListItem {Text="Mestrados", Value="4"},
                    new SelectListItem {Text="M23", Value="5"},

                })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AreasInteresse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Areas de interesse", new List<SelectListItem>
                {
                    new SelectListItem {Text="Artes", Value="1", Selected=true},
                    new SelectListItem {Text="Gestão", Value="2"},
                    new SelectListItem {Text="Turismo", Value="3"},
                    new SelectListItem {Text="Comunicação", Value="4"},
                    new SelectListItem {Text="Ciências Empresariais e Jurídicas", Value="5"},
                    new SelectListItem {Text="Engenharia e Tecnologia", Value="6"},
                    new SelectListItem {Text="Cinema", Value="7"},
                    new SelectListItem {Text="Design", Value="8"},
                  
                })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observacoes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observacoes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observacoes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submeter a inscrição" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar ao início", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
